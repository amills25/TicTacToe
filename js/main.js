//TicTacToe Game Class
class TicTacToe {
    constructor() { //i will need to put things in here
        //Model
        this.array = [
            [0, 0, 0],
            [0, 0, 0],
            [0, 0, 0],
        ];
        this.gridArray = [];

        this.app = document.getElementById("app");
    }

    //View methods
    generateView() {
        //procedural rendering
        let container = this.generateHTML({ type: 'div', classes: 'container', parent: this.app })
        let row = this.generateHTML({ type: 'div', classes: 'row', parent: container, styles: '', id: 0 })
        //let col = generateHTML({ type: 'div', classes: 'col-4', parent: row })

        //dynamic rendering
        for (let index = 0; index < 9; index++) {
            let element = this.generateHTML({ type: 'div', classes: 'col-4 text-center border border-dark lh-lg', parent: row, text: "X", styles: 'min-width: 14vw; min-height: 16vw; font-size: 8vw', id: index });
            this.gridArray.push(element);
            //save tile object as well
        }
    }


    generateHTML({ type, classes, parent = null, text = '', styles, id }) {
        let element = document.createElement(type);
        element.className = classes;
        element.innerText = text;
        element.style = styles;
        element.id = id;

        // TODO:
        // event listeners
        // id
        // value, data, clicked

        //this is not the limit to what can be done in this helper function
        if (parent) {
            parent.appendChild(element);
        }

        return element;
    }

    updateView() {

    }


    //Controller methods
    init() {
        console.log("init(TicTacToe)");

    }

    handleClick(e) {

    }
}


//Individual Tile Class
class Tile {
    constructor() {
        //Model

    }

    //Controller methods
    handleClick(e) {

    }

    //don't necessarily need this because the parent made it
    init() {
        console.log("View.init()");
    }

    //View methods
    //view is generated by the parent
    updateView() {

    }

}

function init() {
    let game = new TicTacToe();
    game.generateView();
}

init();